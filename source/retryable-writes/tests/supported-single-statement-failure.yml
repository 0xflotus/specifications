data:
    - { _id: 1, x: 11 }
    - { _id: 2, x: 22 }

minServerVersion: '3.6'

# Each test expects an error due to successive network errors for the first and
# second attempt of the write command. Observation of the collection state will
# assert that the write was never committed on the server.
#
# We cannot test a scenario where the first and second attempts both encounter
# network errors but the write does actually commit during one of those
# attempts. This is because (1) the fail point only triggers when a write would
# be committed and (2) the skip and times options are mutually exclusive. That
# said, such a test would mainly assert the server's correctness for at-most
# once semantics and is not essential to assert driver correctness.
tests:
    -
        description: "DeleteOne is never committed"
        failPoint:
            mode: { times: 2 }
            data: { failBeforeCommitExceptionCode: 1 }
        operation:
            name: "deleteOne"
            arguments:
                filter: { _id: 1 }
        outcome:
            error: true
            collection:
                data:
                    - { _id: 1, x: 11 }
                    - { _id: 2, x: 22 }
    -
        description: "FindOneAndDelete is never committed"
        failPoint:
            mode: { times: 2 }
            data: { failBeforeCommitExceptionCode: 1 }
        operation:
            name: "findOneAndDelete"
            arguments:
                filter: { x: { $gte: 11 }}
                sort: { x: 1 }
        outcome:
            error: true
            collection:
                data:
                    - { _id: 1, x: 11 }
                    - { _id: 2, x: 22 }
    -
        description: "FindOneAndReplace is never committed"
        failPoint:
            mode: { times: 2 }
            data: { failBeforeCommitExceptionCode: 1 }
        operation:
            name: "findOneAndReplace"
            arguments:
                filter: { _id: 1 }
                replacement: { _id: 1, x: 111 }
                returnDocument: "Before"
        outcome:
            error: true
            collection:
                data:
                    - { _id: 1, x: 11 }
                    - { _id: 2, x: 22 }
    -
        description: "FindOneAndUpdate is never committed"
        failPoint:
            mode: { times: 2 }
            data: { failBeforeCommitExceptionCode: 1 }
        operation:
            name: "findOneAndUpdate"
            arguments:
                filter: { _id: 1 }
                update: { $inc: { x : 1 }}
        outcome:
            error: true
            collection:
                data:
                    - { _id: 1, x: 11 }
                    - { _id: 2, x: 22 }
    -
        description: "InsertOne is never committed"
        failPoint:
            mode: { times: 2 }
            data: { failBeforeCommitExceptionCode: 1 }
        operation:
            name: "insertOne"
            arguments:
                document: { _id: 3, x: 33 }
        outcome:
            error: true
            collection:
                data:
                    - { _id: 1, x: 11 }
                    - { _id: 2, x: 22 }
    -
        description: "ReplaceOne is never committed"
        failPoint:
            mode: { times: 2 }
            data: { failBeforeCommitExceptionCode: 1 }
        operation:
            name: "replaceOne"
            arguments:
                filter: { _id: 1 }
                replacement: { _id: 1, x: 111 }
        outcome:
            error: true
            collection:
                data:
                    - { _id: 1, x: 11 }
                    - { _id: 2, x: 22 }
    -
        description: "UpdateOne is never committed"
        failPoint:
            mode: { times: 2 }
            data: { failBeforeCommitExceptionCode: 1 }
        operation:
            name: "updateOne"
            arguments:
                filter: { _id: 1 }
                update: { $inc: { x : 1 }}
        outcome:
            error: true
            collection:
                data:
                    - { _id: 1, x: 11 }
                    - { _id: 2, x: 22 }
    -
        description: "UpdateOne with upsert is never committed"
        failPoint:
            mode: { times: 2 }
            data: { failBeforeCommitExceptionCode: 1 }
        operation:
            name: "updateOne"
            arguments:
                filter: { _id: 3, x: 33 }
                update: { $inc: { x : 1 }}
                upsert: true
        outcome:
            error: true
            collection:
                data:
                    - { _id: 1, x: 11 }
                    - { _id: 2, x: 22 }
